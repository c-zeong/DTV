name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-apple-silicon
            os: macos-latest # Runner OS
            target: aarch64-apple-darwin
          - platform: macos-intel
            os: macos-latest # Runner OS, will use Rosetta for x86_64 if needed or action handles it
            target: x86_64-apple-darwin
          - platform: ubuntu-latest # For Linux
            os: ubuntu-latest
            # target: x86_64-unknown-linux-gnu # tauri-action typically infers this for ubuntu-latest
          - platform: windows-latest # For Windows
            os: windows-latest
            # target: x86_64-pc-windows-msvc # tauri-action typically infers this for windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Pass the target to rust-toolchain if it's set in the matrix
          # This ensures the correct toolchain is available for cross-compilation if needed
          target: ${{ matrix.target }}

      # 新增：安装 protoc
      - name: Install protoc
        uses: arduino/setup-protoc@v2
        with:
          version: '25.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest' # Corrected condition to use matrix.os
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0 \
            webkit2gtk-4.1
          # 注意：如果 arduino/setup-protoc 已经处理了 Ubuntu,这里就不需要再单独 apt-get install protobuf-compiler

      - name: Install frontend dependencies
        run: npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'DTV ${{ github.ref_name }}'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          # Pass the target to tauri-action if it's set in the matrix
          target: ${{ matrix.target }}
          # Optional: Add a suffix to differentiate assets if target is specified
          # assetSuffix: ${{ matrix.target && format('-{0}', matrix.target) || '' }}